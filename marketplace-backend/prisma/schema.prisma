generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  lastName      String         @default("")
  email         String         @unique
  phone         String         @default("")
  password      String
  role          String
  createdAt     DateTime       @default(now())
  Professional  Professional?  @relation("UserToProfessional")
  Bookings      Booking[]
  Reviews       Review[]
}

model Professional {
  id           Int       @id @default(autoincrement())
  userId       Int       @unique
  description  String?
  experience   Int?
  createdAt    DateTime  @default(now())
  locationId   Int?
  location     Location? @relation(fields: [locationId], references: [id])
  User         User      @relation("UserToProfessional", fields: [userId], references: [id])
  Services     Service[]
  Reviews      Review[]
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String     
  value    String     @default("")
  icon     String?
  Services Service[]
}

model Service {
  id              Int           @id @default(autoincrement())
  professionalId  Int
  categoryId      Int
  title           String
  description     String?
  price           Float
  createdAt       DateTime      @default(now())
  Professional    Professional  @relation(fields: [professionalId], references: [id])
  Category        Category      @relation(fields: [categoryId], references: [id])
  Bookings        Booking[]
}

model Booking {
  id           Int        @id @default(autoincrement())
  userId       Int
  serviceId    Int
  status       String
  bookingDate  DateTime
  createdAt    DateTime   @default(now())
  User         User       @relation(fields: [userId], references: [id])
  Service      Service    @relation(fields: [serviceId], references: [id])
}

model Review {
  id              Int           @id @default(autoincrement())
  userId          Int
  professionalId  Int
  rating          Int           
  comment         String?
  createdAt       DateTime      @default(now())
  User            User          @relation(fields: [userId], references: [id])
  Professional    Professional  @relation(fields: [professionalId], references: [id])
}

model Location {
  id          Int       @id @default(autoincrement())
  city        String    
  province    String    @default("")
  country     String    @default("Argentina")
  postalCode  String    @default("")
  professionals Professional[]
}